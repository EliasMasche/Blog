<div class="d-flex align-items-center border border-2 rounded-pill overflow-hidden position-relative transition-width" 
     style="height: 40px; width: 40px;" tabindex="0">
    <input type="text"
           class="form-control border-0 bg-transparent px-2 flex-grow-1 text-body position-absolute top-0 bottom-0 start-0 opacity-0"
           placeholder="search"
           aria-label="search"
           style="z-index: 2;"
           @bind-value="searchTerm"
           @onkeyup="@CheckForEnter"
           title="Search for blog post via title or tags" />

    <button class="btn btn-sm rounded-pill ms-auto p-0 d-flex align-items-center justify-content-center"
            type="button"
            aria-label="search submit"
            @onclick="CallSearchEntered"
            style="width: 30px; height: 30px;">
        <i class="search" style="color: var(--bs-navbar-color);"></i>
    </button>
</div>

@code {
    private string searchTerm = string.Empty;

    [Parameter]
    public EventCallback<string> SearchEntered { get; set; }

    private async Task CallSearchEntered()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            return;
        }

        var trimmed = searchTerm.Trim();
        await SearchEntered.InvokeAsync(trimmed);
    }

    private async Task CheckForEnter(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter")
        {
            await SearchEntered.InvokeAsync(searchTerm);
        }
    }

}
